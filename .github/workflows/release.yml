# name: Release NPM Package

# on:
#   push:
#     branches:
#       - master

# jobs:
#   release:
#     name: Create Release and Publish
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: "20.x"
#           registry-url: "https://registry.npmjs.org/"

#       - name: Setup pnpm
#         uses: pnpm/action-setup@v2
#         with:
#           version: 8
#           run_install: false

#       - name: Get pnpm store directory
#         shell: bash
#         run: |
#           echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

#       - name: Setup pnpm cache
#         uses: actions/cache@v3
#         with:
#           path: ${{ env.STORE_PATH }}
#           key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
#           restore-keys: |
#             ${{ runner.os }}-pnpm-store-

#       - name: Install dependencies
#         run: pnpm install --frozen-lockfile

#       - name: Run tests
#         run: pnpm test

#       - name: Get package version
#         id: package_version
#         run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

#       - name: Create Git tag
#         run: |
#           git config --local user.email "action@github.com"
#           git config --local user.name "GitHub Action"
#           git tag -a v${{ steps.package_version.outputs.version }} -m "Release v${{ steps.package_version.outputs.version }}"
#           git push --tags

#       - name: Create GitHub Release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: v${{ steps.package_version.outputs.version }}
#           release_name: Release v${{ steps.package_version.outputs.version }}
#           draft: false
#           prerelease: false

#       - name: Build package
#         run: pnpm run build

#       - name: Publish to NPM
#         run: pnpm publish --no-git-checks
#         env:
#           NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
